services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../../src/*'
        exclude: '../../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Infrastructure\Controller\:
        resource: '../../src/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    Contract.update_handler:
                class: App\Application\Contract\Update\ContractUpdate
                tags:
                    - { name: tactician.handler, command: App\Application\Contract\Update\ContractUpdateCommand }

    Contract.create_handler:
                class: App\Application\Contract\Create\ContractCreate
                tags:
                    - { name: tactician.handler, command: App\Application\Contract\Create\ContractCreateCommand }
